From 6352415a8131b6751c2ec96f23476de31e2d14b2 Mon Sep 17 00:00:00 2001
From: Jeff Backus <jeff.backus@gmail.com>
Date: Sun, 17 Nov 2013 17:37:48 -0500
Subject: [PATCH 1/5] * Added a _terminate_statusd function to statusd-launch.c
 that will attempt to kill the specified process. * Added code to
 mod_statusbar.lua that will add a deinit hook and call _terminate_statusd on
 the statusd process.

---
 mod_statusbar/mod_statusbar.lua | 14 ++++++++++++++
 mod_statusbar/statusd-launch.c  | 14 +++++++++++++-
 2 files changed, 27 insertions(+), 1 deletion(-)

diff --git a/mod_statusbar/mod_statusbar.lua b/mod_statusbar/mod_statusbar.lua
index db91e27..a8e6d34 100644
--- a/mod_statusbar/mod_statusbar.lua
+++ b/mod_statusbar/mod_statusbar.lua
@@ -343,6 +343,20 @@ function mod_statusbar.create(param)
     return sb
 end
 
+--DOC
+-- Function to terminate \file{ion-statusd} on exit or reload. Should
+-- be called from hook \var{deinit}.
+function mod_statusbar.terminate_statusd()
+    if statusd_pid==0 then
+        return
+    end
+
+    mod_statusbar._terminate_statusd(statusd_pid)
+end
+
+-- Establish hook
+ioncore.get_hook("ioncoore_deinit_hook"): add(mod_statusbar.terminate_statusd)
+
 -- }}}
 
 
diff --git a/mod_statusbar/statusd-launch.c b/mod_statusbar/statusd-launch.c
index b298f9d..e16fcc0 100644
--- a/mod_statusbar/statusd-launch.c
+++ b/mod_statusbar/statusd-launch.c
@@ -8,6 +8,7 @@
  
 #include <sys/time.h>
 #include <sys/types.h>
+#include <signal.h>
 #include <unistd.h>
 #include <time.h>
 #include <errno.h>
@@ -31,7 +32,6 @@
 
 #define USEC 1000000
 
-
 static bool process_pipe(int fd, ExtlFn fn, 
                          bool *doneseen, bool *eagain)
 {
@@ -177,3 +177,15 @@ err:
     return -1;
 }
 
+EXTL_EXPORT
+int mod_statusbar__terminate_statusd(int pid)
+{
+    if(pid==0) {
+        return -1;
+    }
+
+    // Send SIGHUP to the specified statusd process to indicate
+    // that we're done.
+    kill( (pid_t)pid, SIGHUP)
+}
+
-- 
1.8.1.4


From d452b7d8132d6c20dc379fc92f8d2ee7f3dac49d Mon Sep 17 00:00:00 2001
From: Jeff Backus <jeff.backus@gmail.com>
Date: Sun, 17 Nov 2013 17:45:12 -0500
Subject: [PATCH 2/5] * Fixed a typo. It now compiles.

---
 mod_statusbar/statusd-launch.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/mod_statusbar/statusd-launch.c b/mod_statusbar/statusd-launch.c
index e16fcc0..3af9c77 100644
--- a/mod_statusbar/statusd-launch.c
+++ b/mod_statusbar/statusd-launch.c
@@ -186,6 +186,6 @@ int mod_statusbar__terminate_statusd(int pid)
 
     // Send SIGHUP to the specified statusd process to indicate
     // that we're done.
-    kill( (pid_t)pid, SIGHUP)
+    kill( (pid_t)pid, SIGHUP);
 }
 
-- 
1.8.1.4


From 425edadc2da784d4e4d20f068abd48bf24adb9ed Mon Sep 17 00:00:00 2001
From: Jeff Backus <jeff.backus@gmail.com>
Date: Tue, 19 Nov 2013 05:38:42 -0500
Subject: [PATCH 3/5] * Fixed a typo w/ hook. Now properly terminates
 ion-statusd on exit.

---
 mod_statusbar/mod_statusbar.lua | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/mod_statusbar/mod_statusbar.lua b/mod_statusbar/mod_statusbar.lua
index a8e6d34..59669c8 100644
--- a/mod_statusbar/mod_statusbar.lua
+++ b/mod_statusbar/mod_statusbar.lua
@@ -355,7 +355,7 @@ function mod_statusbar.terminate_statusd()
 end
 
 -- Establish hook
-ioncore.get_hook("ioncoore_deinit_hook"): add(mod_statusbar.terminate_statusd)
+ioncore.get_hook("ioncore_deinit_hook"):add(mod_statusbar.terminate_statusd)
 
 -- }}}
 
-- 
1.8.1.4


From 6796948299c3e2f125279abee8cdd056c16fa746 Mon Sep 17 00:00:00 2001
From: Jeff Backus <jeff.backus@gmail.com>
Date: Tue, 19 Nov 2013 06:41:16 -0500
Subject: [PATCH 4/5] * Forgot to clear out the old statusd pid after
 terminating it.

---
 mod_statusbar/mod_statusbar.lua | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/mod_statusbar/mod_statusbar.lua b/mod_statusbar/mod_statusbar.lua
index 59669c8..82e6baf 100644
--- a/mod_statusbar/mod_statusbar.lua
+++ b/mod_statusbar/mod_statusbar.lua
@@ -352,6 +352,8 @@ function mod_statusbar.terminate_statusd()
     end
 
     mod_statusbar._terminate_statusd(statusd_pid)
+
+    statusd_pid=0
 end
 
 -- Establish hook
-- 
1.8.1.4


From 87402b78203f6877d7dd70a698ddb626e1b27b59 Mon Sep 17 00:00:00 2001
From: Jeff Backus <jeff.backus@gmail.com>
Date: Wed, 20 Nov 2013 05:38:07 -0500
Subject: [PATCH 5/5] * Documented reason / bug at head of
 _terminate_statusd(). * Added a return 0 to the end of _terminate_statusd().

---
 mod_statusbar/statusd-launch.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/mod_statusbar/statusd-launch.c b/mod_statusbar/statusd-launch.c
index 3af9c77..c597738 100644
--- a/mod_statusbar/statusd-launch.c
+++ b/mod_statusbar/statusd-launch.c
@@ -177,6 +177,16 @@ err:
     return -1;
 }
 
+/* It looks like child processes generated via fork() on Linux do not
+ * get a signal when the parent process dies. Specifically, the
+ * PR_SET_PDEATHSIG is cleared, therefore the ion-statusd process must
+ * be explicitly terminated on deinit. This function should be called
+ * from Lua on deinit with the ion-statusd process id generated above.
+ * 
+ * For more information, refer to the following man pages:
+ * - fork(2)
+ * - prctl(2), specifically section on PR_SET_PDEATHSIG
+ */
 EXTL_EXPORT
 int mod_statusbar__terminate_statusd(int pid)
 {
@@ -187,5 +197,7 @@ int mod_statusbar__terminate_statusd(int pid)
     // Send SIGHUP to the specified statusd process to indicate
     // that we're done.
     kill( (pid_t)pid, SIGHUP);
+
+    return 0;
 }
 
-- 
1.8.1.4

